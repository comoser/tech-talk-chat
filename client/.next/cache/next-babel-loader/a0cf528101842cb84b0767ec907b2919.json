{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidalecrim/Desktop/tech-talk/client/components/chat/chat_box.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport socketio from 'socket.io-client';\nimport uuidLib from 'uuid/v1';\nimport useChatMessages from '../../hooks/chat_messages';\nexport var ChatBox = function ChatBox() {\n  var _useState = useState(null),\n      uuid = _useState[0],\n      setUuid = _useState[1];\n\n  var _useState2 = useState(null),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var _useState3 = useState(''),\n      draftMessage = _useState3[0],\n      setDraftMessage = _useState3[1];\n\n  var _useChatMessages = useChatMessages([]),\n      _useChatMessages2 = _slicedToArray(_useChatMessages, 2),\n      messages = _useChatMessages2[0],\n      addMessage = _useChatMessages2[1];\n\n  useEffect(function () {\n    var socket = socketio.connect('http://localhost:8007');\n    var uuidValue = uuidLib();\n    setSocket(socket);\n    setUuid(uuidValue);\n    socket.on('CHAT_MESSAGE_RECEIVED', function (chatMessageContent) {\n      console.log(chatMessageContent);\n      addMessage(chatMessageContent.message);\n\n      if (chatMessageContent.uuid === uuidValue) {\n        console.log('IT WAS ME');\n      } else {\n        console.log('NOT ME');\n      }\n    });\n  }, []);\n\n  var onMessageChange = function onMessageChange(e) {\n    setDraftMessage(e.target.value);\n  };\n\n  var sendMessage = function sendMessage() {\n    socket.emit('CHAT_MESSAGE_SENT', {\n      uuid: uuid,\n      message: draftMessage\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, messages.map(function (msg) {\n    return __jsx(\"li\", {\n      key: msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, msg);\n  })), __jsx(\"input\", {\n    name: \"chat-message\",\n    value: draftMessage,\n    onChange: onMessageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Send Message\"));\n};\nChatBox.propTypes = {};\nChatBox.defaultProps = {};","map":{"version":3,"sources":["/Users/davidalecrim/Desktop/tech-talk/client/components/chat/chat_box.js"],"names":["React","useState","useEffect","PropTypes","styled","socketio","uuidLib","useChatMessages","ChatBox","uuid","setUuid","socket","setSocket","draftMessage","setDraftMessage","messages","addMessage","connect","uuidValue","on","chatMessageContent","console","log","message","onMessageChange","e","target","value","sendMessage","emit","map","msg","propTypes","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACDP,QAAQ,CAAC,IAAD,CADP;AAAA,MAClBQ,IADkB;AAAA,MACZC,OADY;;AAAA,mBAEGT,QAAQ,CAAC,IAAD,CAFX;AAAA,MAElBU,MAFkB;AAAA,MAEVC,SAFU;;AAAA,mBAGeX,QAAQ,CAAC,EAAD,CAHvB;AAAA,MAGlBY,YAHkB;AAAA,MAGJC,eAHI;;AAAA,yBAIMP,eAAe,CAAC,EAAD,CAJrB;AAAA;AAAA,MAIlBQ,QAJkB;AAAA,MAIRC,UAJQ;;AAMzBd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMS,MAAM,GAAGN,QAAQ,CAACY,OAAT,CAAiB,uBAAjB,CAAf;AACA,QAAMC,SAAS,GAAGZ,OAAO,EAAzB;AACAM,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAD,IAAAA,OAAO,CAACQ,SAAD,CAAP;AACAP,IAAAA,MAAM,CAACQ,EAAP,CAAU,uBAAV,EAAmC,UAACC,kBAAD,EAAwB;AACvDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,kBAAZ;AACAJ,MAAAA,UAAU,CAACI,kBAAkB,CAACG,OAApB,CAAV;;AACA,UAAIH,kBAAkB,CAACX,IAAnB,KAA4BS,SAAhC,EAA2C;AACvCG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OAFD,MAEO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,KARD;AASH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC3BX,IAAAA,eAAe,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBjB,IAAAA,MAAM,CAACkB,IAAP,CAAY,mBAAZ,EAAiC;AAC7BpB,MAAAA,IAAI,EAAJA,IAD6B;AAE7Bc,MAAAA,OAAO,EAAEV;AAFoB,KAAjC;AAIH,GALD;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,QAAQ,CAACe,GAAT,CAAa,UAACC,GAAD,EAAS;AAClB,WACI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADJ;AAGH,GAJD,CAFR,CADJ,EAUI;AACI,IAAA,IAAI,EAAC,cADT;AAEI,IAAA,KAAK,EAAElB,YAFX;AAGI,IAAA,QAAQ,EAAEW,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAeI;AAAQ,IAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,CADJ;AAqBH,CAtDM;AAwDPpB,OAAO,CAACwB,SAAR,GAAoB,EAApB;AAIAxB,OAAO,CAACyB,YAAR,GAAuB,EAAvB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport socketio from 'socket.io-client';\nimport uuidLib from 'uuid/v1';\n\nimport useChatMessages from '../../hooks/chat_messages';\n\nexport const ChatBox = () => {\n    const [uuid, setUuid] = useState(null);\n    const [socket, setSocket] = useState(null);\n    const [draftMessage, setDraftMessage] = useState('');\n    const [messages, addMessage] = useChatMessages([]);\n\n    useEffect(() => {\n        const socket = socketio.connect('http://localhost:8007');\n        const uuidValue = uuidLib();\n        setSocket(socket);\n        setUuid(uuidValue);\n        socket.on('CHAT_MESSAGE_RECEIVED', (chatMessageContent) => {\n            console.log(chatMessageContent);\n            addMessage(chatMessageContent.message);\n            if (chatMessageContent.uuid === uuidValue) {\n                console.log('IT WAS ME');\n            } else {\n                console.log('NOT ME');\n            }\n        });\n    }, []);\n\n    const onMessageChange = (e) => {\n        setDraftMessage(e.target.value);\n    };\n\n    const sendMessage = () => {\n        socket.emit('CHAT_MESSAGE_SENT', {\n            uuid,\n            message: draftMessage,\n        });\n    }\n\n    return (\n        <div>\n            <ul>\n                {\n                    messages.map((msg) => {\n                        return (\n                            <li key={msg}>{msg}</li>\n                        );\n                    })\n                }\n            </ul>\n            <input\n                name=\"chat-message\"\n                value={draftMessage}\n                onChange={onMessageChange}\n            />\n            <button onClick={sendMessage}>\n                Send Message\n            </button>\n        </div>\n    );\n};\n\nChatBox.propTypes = {\n\n};\n\nChatBox.defaultProps = {\n\n};\n"]},"metadata":{},"sourceType":"module"}