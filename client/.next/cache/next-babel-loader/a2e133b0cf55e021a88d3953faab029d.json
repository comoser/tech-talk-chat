{"ast":null,"code":"var _jsxFileName = \"/Users/davidalecrim/Desktop/tech-talk/client/components/chat/chat_box.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport socketio from 'socket.io-client';\nimport uuidLib from 'uuid/v1';\nimport useChatMessages from '../../hooks/chat_messages';\nexport const ChatBox = () => {\n  const {\n    0: uuid,\n    1: setUuid\n  } = useState(null);\n  const {\n    0: socket,\n    1: setSocket\n  } = useState(null);\n  const {\n    0: draftMessage,\n    1: setDraftMessage\n  } = useState('');\n  const [messages, addMessage] = useChatMessages([]);\n  const {\n    0: messageHistory,\n    1: setMessageHistory\n  } = useState([]);\n  useEffect(async () => {\n    setSocket(socketio.connect(process.env.API_URL));\n    setUuid(uuidLib());\n    const response = await fetch(`${process.env.API_URL}/history`);\n    const messagesJson = await response.json();\n    setMessageHistory(messagesJson.response);\n  }, []);\n\n  if (socket) {\n    socket.on('CHAT_MESSAGE_RECEIVED', chatMessageContent => {\n      addMessage(chatMessageContent);\n    });\n  }\n\n  const onDraftMessageChange = e => {\n    setDraftMessage(e.target.value);\n  };\n\n  const sendMessage = () => {\n    socket.emit('CHAT_MESSAGE_SENT', {\n      uuid,\n      message: draftMessage\n    });\n  };\n\n  const sendMessageByKeyboard = e => {\n    if (e.which === 13) {\n      socket.emit('CHAT_MESSAGE_SENT', {\n        uuid,\n        message: draftMessage\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, messageHistory.map(item => {\n    return __jsx(\"li\", {\n      key: item.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, item.uuid === uuid ? 'ME: ' : '', item.message);\n  }), messages.map(messageWrapper => {\n    return __jsx(\"li\", {\n      key: messageWrapper.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, messageWrapper.uuid === uuid ? 'ME: ' : '', messageWrapper.message);\n  })), __jsx(\"input\", {\n    name: \"draft-message\",\n    value: draftMessage,\n    onChange: onDraftMessageChange,\n    onKeyPress: sendMessageByKeyboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Send Message\"));\n};","map":{"version":3,"sources":["/Users/davidalecrim/Desktop/tech-talk/client/components/chat/chat_box.js"],"names":["React","useState","useEffect","socketio","uuidLib","useChatMessages","ChatBox","uuid","setUuid","socket","setSocket","draftMessage","setDraftMessage","messages","addMessage","messageHistory","setMessageHistory","connect","process","env","API_URL","response","fetch","messagesJson","json","on","chatMessageContent","onDraftMessageChange","e","target","value","sendMessage","emit","message","sendMessageByKeyboard","which","map","item","messageWrapper"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAACU,YAAD;AAAA,OAAeC;AAAf,MAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,UAAX,IAAyBT,eAAe,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACU,cAAD;AAAA,OAAiBC;AAAjB,MAAsCf,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClBQ,IAAAA,SAAS,CAACP,QAAQ,CAACc,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,OAA7B,CAAD,CAAT;AACAZ,IAAAA,OAAO,CAACJ,OAAO,EAAR,CAAP;AACA,UAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAO,CAACC,GAAR,CAAYC,OAAQ,UAAxB,CAA5B;AACA,UAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAR,IAAAA,iBAAiB,CAACO,YAAY,CAACF,QAAd,CAAjB;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIZ,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACgB,EAAP,CAAU,uBAAV,EAAoCC,kBAAD,IAAwB;AACvDZ,MAAAA,UAAU,CAACY,kBAAD,CAAV;AACH,KAFD;AAGH;;AAED,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAChChB,IAAAA,eAAe,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBtB,IAAAA,MAAM,CAACuB,IAAP,CAAY,mBAAZ,EAAiC;AAC7BzB,MAAAA,IAD6B;AAE7B0B,MAAAA,OAAO,EAAEtB;AAFoB,KAAjC;AAIH,GALD;;AAOA,QAAMuB,qBAAqB,GAAIN,CAAD,IAAO;AACjC,QAAIA,CAAC,CAACO,KAAF,KAAY,EAAhB,EAAoB;AAChB1B,MAAAA,MAAM,CAACuB,IAAP,CAAY,mBAAZ,EAAiC;AAC7BzB,QAAAA,IAD6B;AAE7B0B,QAAAA,OAAO,EAAEtB;AAFoB,OAAjC;AAIH;AACJ,GAPD;;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQI,cAAc,CAACqB,GAAf,CAAoBC,IAAD,IAAU;AACzB,WACI;AACI,MAAA,GAAG,EAAEA,IAAI,CAACJ,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKI,IAAI,CAAC9B,IAAL,KAAcA,IAAd,GAAqB,MAArB,GAA4B,EAHjC,EAGqC8B,IAAI,CAACJ,OAH1C,CADJ;AAOH,GARD,CAFR,EAaQpB,QAAQ,CAACuB,GAAT,CAAcE,cAAD,IAAoB;AAC7B,WACI;AACI,MAAA,GAAG,EAAEA,cAAc,CAACL,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKK,cAAc,CAAC/B,IAAf,KAAwBA,IAAxB,GAA+B,MAA/B,GAAwC,EAH7C,EAGiD+B,cAAc,CAACL,OAHhE,CADJ;AAOH,GARD,CAbR,CADJ,EAyBI;AACI,IAAA,IAAI,EAAC,eADT;AAEI,IAAA,KAAK,EAAEtB,YAFX;AAGI,IAAA,QAAQ,EAAEgB,oBAHd;AAII,IAAA,UAAU,EAAEO,qBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA+BI;AAAQ,IAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BJ,CADJ;AAqCH,CA9EM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketio from 'socket.io-client';\nimport uuidLib from 'uuid/v1';\n\nimport useChatMessages from '../../hooks/chat_messages';\n\nexport const ChatBox = () => {\n    const [uuid, setUuid] = useState(null);\n    const [socket, setSocket] = useState(null);\n    const [draftMessage, setDraftMessage] = useState('');\n    const [messages, addMessage] = useChatMessages([]);\n    const [messageHistory, setMessageHistory] = useState([]);\n\n    useEffect(async () => {\n        setSocket(socketio.connect(process.env.API_URL));\n        setUuid(uuidLib());\n        const response = await fetch(`${process.env.API_URL}/history`);\n        const messagesJson = await response.json();\n        setMessageHistory(messagesJson.response);\n    }, []);\n\n    if (socket) {\n        socket.on('CHAT_MESSAGE_RECEIVED', (chatMessageContent) => {\n            addMessage(chatMessageContent);\n        });\n    }\n\n    const onDraftMessageChange = (e) => {\n        setDraftMessage(e.target.value);\n    };\n\n    const sendMessage = () => {\n        socket.emit('CHAT_MESSAGE_SENT', {\n            uuid,\n            message: draftMessage,\n        });\n    }\n\n    const sendMessageByKeyboard = (e) => {\n        if (e.which === 13) {\n            socket.emit('CHAT_MESSAGE_SENT', {\n                uuid,\n                message: draftMessage,\n            });\n        }\n    }\n\n    return (\n        <div>\n            <ul>\n                {\n                    messageHistory.map((item) => {\n                        return (\n                            <li\n                                key={item.message}\n                            >\n                                {item.uuid === uuid ? 'ME: ':''}{item.message}\n                            </li>\n                        );\n                    })\n                }\n                {\n                    messages.map((messageWrapper) => {\n                        return (\n                            <li\n                                key={messageWrapper.message}\n                            >\n                                {messageWrapper.uuid === uuid ? 'ME: ' : ''}{messageWrapper.message}\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n            <input\n                name=\"draft-message\"\n                value={draftMessage}\n                onChange={onDraftMessageChange}\n                onKeyPress={sendMessageByKeyboard}\n            />\n            <button onClick={sendMessage}>\n                Send Message\n            </button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}