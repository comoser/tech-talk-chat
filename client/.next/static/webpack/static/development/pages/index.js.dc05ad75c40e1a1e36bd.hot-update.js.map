{"version":3,"file":"static/webpack/static/development/pages/index.js.dc05ad75c40e1a1e36bd.hot-update.js","sources":["webpack:///./components/chat/chat_box.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketio from 'socket.io-client';\nimport uuidLib from 'uuid/v1';\nimport styled from 'styled-components';\n\nimport useChatMessages from '../../hooks/chat_messages';\nimport { ChatItem } from './chat_item';\nimport { ChatInput } from './chat_input';\n\nconst ChatBoxWrapper = styled.div`\n    position: fixed;\n    width: 375px;\n    height: 60vh;\n    border-radius: 5px;\n    background-color: #f0f0f0;\n    top: 100px;\n    left: 50%;\n    transform: translate(-50%, 0);\n    padding: 3px;\n`;\n\nconst Scroller = styled.div`\n  overflow: scroll;\n  height: calc(100% - 40px);\n`;\n\nexport const ChatBox = () => {\n    const [uuid, setUuid] = useState(null);\n    const [socket, setSocket] = useState(null);\n    const [draftMessage, setDraftMessage] = useState('');\n    const [messages, addMessage] = useChatMessages([]);\n    const [messageHistory, setMessageHistory] = useState([]);\n\n    const fetchHistory = async () => {\n        const response = await fetch(`${process.env.API_URL}/history`);\n        const messagesJson = await response.json();\n        setMessageHistory(messagesJson.response);\n    };\n\n    useEffect(() => {\n        setSocket(socketio.connect(process.env.API_URL));\n        setUuid(uuidLib());\n        fetchHistory();\n    }, []);\n\n    if (socket) {\n        socket.on('CHAT_MESSAGE_RECEIVED', (chatMessageContent) => {\n            addMessage(chatMessageContent);\n        });\n    }\n\n    const onDraftMessageChange = (e) => {\n        setDraftMessage(e.target.value);\n    };\n\n    const sendMessage = () => {\n        socket.emit('CHAT_MESSAGE_SENT', {\n            uuid,\n            message: draftMessage,\n        });\n    };\n\n    const sendMessageByKeyboard = (e) => {\n        if (e.which === 13) {\n            socket.emit('CHAT_MESSAGE_SENT', {\n                uuid,\n                message: draftMessage,\n            });\n        }\n    };\n\n    const renderHistoryMessages = () => {\n        return messageHistory.map((messageWrapper) => {\n            return (\n                <ChatItem\n                    key={messageWrapper.message}\n                    uuid={uuid}\n                    messageWrapper={messageWrapper}\n                />\n            );\n        });\n    };\n\n    const renderMessages = () => {\n        return messages.map((messageWrapper) => {\n            return (\n                <ChatItem\n                    key={messageWrapper.message}\n                    uuid={uuid}\n                    messageWrapper={messageWrapper}\n                />\n            );\n        });\n    };\n\n    return (\n        <>\n            <ChatBoxWrapper>\n                <Scroller>\n                    {renderHistoryMessages()}\n                    {renderMessages()}\n                </Scroller>\n                <ChatInput\n                    draftMessage={draftMessage}\n                    onDraftMessageChange={onDraftMessageChange}\n                    sendMessage={sendMessage}\n                    sendMessageByKeyboard={sendMessageByKeyboard}\n                />\n            </ChatBoxWrapper>\n        </>\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAYA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}